import pygame
from pygame import mixer
import random
import time
pygame.font.init()

swidth = 1080
sheight = 750

size = (swidth, sheight)
screen = pygame.display.set_mode(size)
pygame.display.set_caption("Pong game")
clock = pygame.time.Clock()

WHITE = (255, 255, 255)
GREY = (200,200,200)
RED = (229,44,0)
BLUE = (2,126,188)
BLACK = (88,89,91)

game_font = pygame.font.Font(None, 60)
score_time = True
multiplayer_enabled = None


def animation():
    global speedx, speedy, score1, score2, score_time
    ball.x += speedx
    ball.y += speedy
    if ball.top<=0 or ball.bottom>=sheight:
        speedy*=-1.01
    if ball.left<=0:
        
        score_time = pygame.time.get_ticks()
    elif ball.right>=swidth:
        
        score_time = pygame.time.get_ticks()
    if ball.colliderect(player1) and speedx>0:
        if abs(ball.right-player1.left)<10:
            speedx*=-1.01
        elif abs(ball.bottom-player1.top)<10 and speedy>0:
            speedy*=-1
        elif abs(ball.top-player1.bottom)<10 and speedy<0:
            speedy*=-1
    if ball.colliderect(player2) and speedx<0:
        if abs(ball.left-player2.right)<10:
            speedx*=-1.01
        elif abs(ball.bottom-player2.top)<10 and speedy>0:
            speedy*=-1
        elif abs(ball.top-player2.bottom)<10 and speedy<0:
            speedy*=-1



ball = pygame.Rect(swidth/2-15,sheight/2-15,30,30)
player1 = pygame.Rect(swidth-20,sheight/2-65,10,130)
player2 = pygame.Rect(10, sheight/2-65,10,130)
speedx = 6*random.choice((1,-1))
speedy = 6*random.choice((1,-1))
speed1 = 0
speed2 = 0
speedslow = 6
speedfast = 9
score1 = 0
score2 = 0


def restart():
    global speedx, speedy, current_time, score_time
    current_time = pygame.time.get_ticks()
    ball.center=(swidth/2,sheight/2)
    player1.midright=(swidth,sheight/2)
    player2.midleft=(0,sheight/2)
    if current_time-score_time <700:
        three = game_font.render("3",False,BLACK)
        screen.blit(three,(swidth/2-12,sheight/2+20))
    if 700< current_time-score_time <1400:
        two = game_font.render("2",False,BLACK)
        screen.blit(two,(swidth/2-12,sheight/2+20))
    if 1400< current_time-score_time <2100:
        one = game_font.render("1",False,BLACK)
        screen.blit(one,(swidth/2-12,sheight/2+20))
    if current_time-score_time <2100:
        speedx, speedy = 0,0
    else:
        speedy = 6*random.choice((1,-1))
        speedx = 6*random.choice((1,-1))
        score_time = None

def check_keystroke_movement():
    
    global speed1, speed2
    pass
     



def update_player_movement():
    player1.y += speed1
    if player1.top<=0:
        player1.top=0
    if player1.bottom>=sheight:
        player1.bottom=sheight
    player2.y += speed2
    if player2.top<=0:
        player2.top=0
    if player2.bottom>=sheight:
        player2.bottom=sheight


def draw_shapes():
    pygame.draw.rect(screen, BLUE, player1)
    pygame.draw.rect(screen,RED,player2)
    pygame.draw.ellipse(screen, BLACK, ball)
    pygame.draw.aaline(screen,GREY,(swidth/2,0),(swidth/2,sheight))
    pygame.draw.circle(screen, GREY,[swidth/2,sheight/2],150,5 )

def check_ball_score():
    global score1, score2
    if ball.left<=0:
        score1 +=1
    elif ball.right>=swidth:
        score2 +=1

def game_start():
    global multiplayer_enabled
    while True:
        
        
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
            
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_y:
                    multiplayer_enabled = True
                    main_game_loop()
                if event.key == pygame.K_n:
                    multiplayer_enabled = False
                    main_game_loop()
        screen.fill(WHITE)
        selection_text = game_font.render('Press Y for multiplayer, N for Single Player', True, BLACK)
        LOGO_text = pygame.font.Font(None, 100).render('PONG', True, BLACK)
        logo_coordinates = (swidth//2-LOGO_text.get_width()//2, sheight//2-LOGO_text.get_height()//2)
        selection_coordinates = (swidth//2-selection_text.get_width()//2, sheight//2-selection_text.get_height()//2+100)
        screen.blit(selection_text, selection_coordinates)
        screen.blit(LOGO_text, logo_coordinates)
        # draw_shapes()
        # display_score()
        
        pygame.display.flip()
        clock.tick(60)

def display_score():
    text1 = game_font.render(f"{score1}",False,BLUE)
    screen.blit(text1,((swidth/2)+72,(sheight/2)-300))
    text2 = game_font.render(f"{score2}",False,RED)
    screen.blit(text2,((swidth/2)-100,(sheight/2)-300))  

def main_game_loop():
    global speed1, speed2
    
    while True:
    
     
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
            
            if event.type == pygame.KEYDOWN:
                if event.key == pygame.K_DOWN:
                    speed1 +=11
                if event.key == pygame.K_UP:
                    speed1 -=11
                if event.key == pygame.K_s:
                    speed2 +=11
                if event.key == pygame.K_w:
                    speed2 -=11
            if event.type == pygame.KEYUP:
                if event.key == pygame.K_DOWN:
                    speed1 -=11
                if event.key == pygame.K_UP:
                    speed1 +=11
                if event.key == pygame.K_s:
                    speed2 -=11
                if event.key == pygame.K_w:
                    speed2 +=11

                
        
        
        screen.fill(WHITE)
        check_keystroke_movement()
        update_player_movement()
        draw_shapes()
        

        if score_time:
            restart()
        display_score()
        

        animation()
        
        check_ball_score()

        pygame.display.flip()
        clock.tick(60)

game_start()